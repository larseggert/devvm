---
- name: Configure dev VM
  hosts: all
  gather_facts: false

  tasks:
    - name: Create shutdown check script
      become: true
      ansible.builtin.copy:
        dest: /root/shutdown-check.sh
        mode: u+rx
        content: |
          #!/usr/bin/env bash
          if [ "$(w -h | sort --key=1,1 --unique | wc --lines)" -eq 0 ]; then
            wall "No users logged in for 30 minutes, shutting down..."
            sleep 3
            shutdown -P now
          fi

    - name: Shut machine down after 30 min if no user logged in
      become: true
      ansible.builtin.cron:
        name: 30-minute shutdown check
        minute: "*/30"
        job: /root/shutdown-check.sh

    - name: Force user logout after 30 min of inactivity
      become: true
      ansible.builtin.lineinfile:
        path: /etc/systemd/logind.conf
        regexp: "^#?StopIdleSessionSec="
        line: StopIdleSessionSec=1800

    - name: Upgrade all installed apt packages
      become: true
      ansible.builtin.apt:
        autoclean: true
        autoremove: true
        install_recommends: false
        update_cache: true
        upgrade: dist

    - name: Install tools via apt
      become: true
      ansible.builtin.apt:
        install_recommends: false
        update_cache: true
        state: present
        name:
          - bat
          - build-essential
          - command-not-found
          - direnv
          - eza
          - fish
          - fzf
          - git
          - htop
          - hyperfine
          - libclang-dev
          - libnss3-dev
          - linux-perf
          - lld
          - net-tools
          - ninja-build
          - pkg-config
          - python-is-python3
          - python3-pip
          - ripgrep
          - sccache
          - starship
          - tmux
          - unzip
          - watchman
          - zoxide

    - name: Check if cargo is installed
      register: cargo
      ansible.builtin.stat:
        path: ~/.cargo/bin/cargo

    - name: Download rustup
      when: not cargo.stat.exists
      ansible.builtin.get_url:
        url: https://sh.rustup.rs
        dest: /tmp/rustup.sh
        mode: u+rx

    - name: Install Rust
      when: not cargo.stat.exists
      ansible.builtin.command: /tmp/rustup.sh -y --default-toolchain nightly --component rust-analyzer,miri,llvm-tools
      args:
        creates: ~/.cargo/bin/cargo

    - name: Update Rust
      when: cargo.stat.exists
      ansible.builtin.command: ~/.cargo/bin/rustup update
      register: rustup_update
      changed_when: rustup_update.rc != 0

    - name: Check if cargo-binstall is installed
      register: binstall
      ansible.builtin.stat:
        path: ~/.cargo/bin/cargo-binstall

    - name: Download cargo-binstall install script
      when: not binstall.stat.exists
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh
        dest: /tmp/cargo-binstall.sh
        mode: u+rx

    - name: Install cargo-binstall
      when: not binstall.stat.exists
      ansible.builtin.command: /tmp/cargo-binstall.sh
      args:
        creates: ~/.cargo/bin/cargo-binstall

    - name: Install Rust tools
      ansible.builtin.command: ~/.cargo/bin/cargo-binstall --no-confirm --locked "{{ item.crate }}"
      args:
        creates: "~/.cargo/bin/{{ item.creates }}"
      loop:
        - { crate: cargo-audit, creates: cargo-audit }
        - { crate: cargo-deny, creates: cargo-deny }
        - { crate: cargo-fuzz, creates: cargo-fuzz }
        - { crate: cargo-hack, creates: cargo-hack }
        - { crate: cargo-llvm-cov, creates: cargo-llvm-cov }
        - { crate: cargo-machete, creates: cargo-machete }
        - { crate: cargo-machete, creates: cargo-machete }
        - { crate: cargo-nextest, creates: cargo-nextest }
        - { crate: cargo-show-asm, creates: cargo-asm }
        - { crate: cargo-update, creates: cargo-install-update }
        - { crate: cargo-vet, creates: cargo-vet }
        - { crate: cbindgen, creates: cbindgen }
        - { crate: samply, creates: samply }
        - { crate: zizmor, creates: zizmor }

    - name: Update Rust tools
      ansible.builtin.command: ~/.cargo/bin/cargo install-update --all --git --locked
      register: cargo_update
      changed_when: cargo_update.rc != 0

    - name: Configure bash
      block:
        - name: Source ~/.bashrc.local
          ansible.builtin.lineinfile:
            path: ~/.bashrc
            regexp: "^source ~/.bashrc.local"
            line: "source ~/.bashrc.local"
        - name: Configure ~/.bashrc.local
          ansible.builtin.copy:
            src: files/bash
            dest: ~/.bashrc.local
            mode: u+r

    - name: Configure fish
      ansible.builtin.copy:
        src: files/fish
        dest: ~/.config/fish/config.fish
        mode: u+r

    - name: Configure ripgrep
      ansible.builtin.copy:
        src: files/ripgrep
        dest: ~/.config/ripgrep
        mode: u+r

    - name: Configure bat
      block:
        - name: Create bat config directory
          ansible.builtin.file:
            path: ~/.config/bat
            state: directory
            mode: u+rx
        - name: Create bat config file
          ansible.builtin.copy:
            src: files/bat
            dest: ~/.config/bat/config
            mode: u+r

    - name: Configure starship
      ansible.builtin.copy:
        src: files/starship
        dest: ~/.config/starship.toml
        mode: u+r
